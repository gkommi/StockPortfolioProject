/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gowtam.stockportfolioproject;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 1687968
 */
public class ManageStockTradesWindow extends javax.swing.JFrame {

    /**
     * Creates new form manageStockTradesWindow
     */
    public ManageStockTradesWindow() {
        initComponents();
            this.setDefaultCloseOperation ( JFrame.DISPOSE_ON_CLOSE );
    }

    private Portfolio _portfolio;
    private DefaultTableModel _model;
    private ArrayList<StockTrade> _tradesList;      // holds all prices read from file
            
    public void initialize(Portfolio portfolio)
    {
        _portfolio = portfolio;
        
        Calendar cal = Calendar.getInstance();
        Date today = cal.getTime();
        todaysDateField.setText(today.toString());
        
//        _pricesList = readPrices();
//        
//        _model = (DefaultTableModel) mcpTable.getModel();
//        _model.setRowCount(0);      // clear table
//        
//        loadPricesToTable(_model, _pricesList);
//        
//        cal.add(Calendar.DAY_OF_MONTH, -10);
//        Date latestDate = cal.getTime();
//        latestPricesDateField.setDate(latestDate);
    }

    private ArrayList<StockTrade> readTrades()
    {
        ArrayList<StockTrade> tradesList = new ArrayList<>();
//        String filename = getStockPricesFile();
//        File f = new File(filename);
//        if (!f.exists())        // file does not exists
//            return tradesList;
//        
//        try {
//            BufferedReader reader = new BufferedReader(new FileReader(filename));
//            String line = reader.readLine(); //skipping first line, header
//            System.out.println(line);
//            while ((line = reader.readLine()) != null) {
//              System.out.println(line);
//                String[] x = line.split(",");
//                StockPrice p = new StockPrice(x[0], LocalDate.parse(x[1]), Double.parseDouble(x[2]));
//                tradesList.add(p);
//            }
//            reader.close(); 
//        }
//        catch (IOException ex)
//        {
//           System.out.println("MY ERROR: file does not exist");
//           ex.printStackTrace();
//        }
        return tradesList;
        
     }
    
    //save data in portfolio object into portfolioDetails.txt file
    private void saveTradesToFile(ArrayList<StockTrade> tradesList) {
        String filename = getStockPricesFile(); 
        try {
            File f = new File(filename);
            boolean needHeader = !f.exists();
            
            BufferedWriter writer = new BufferedWriter(new FileWriter(filename, true));
            if (needHeader)
            {
                writer.write("Ticker,Date,Price");
                writer.newLine();
            }
            for (StockPrice price : pricesList)
            {
                StringBuilder buf = new StringBuilder();
                buf.append(price.Ticker())
                    .append(",").append(price.CloseDate())
                    .append(",").append(price.ClosePrice());
                writer.write(buf.toString());
                writer.newLine();
            }
            
            writer.close();
            JOptionPane.showMessageDialog(this, "Downloaded and saved!", "Save", JOptionPane.INFORMATION_MESSAGE);
        }     
        catch (IOException ex)
        {
          System.out.println("MY ERROR: file does not exist");
          ex.printStackTrace();
          JOptionPane.showMessageDialog(this, "Error saving to File", "Save", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private String getStockPricesFile() {
        return _portfolio.getFolder() + File.separator + "StockPrices.txt";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stockTradesInPortfolioLabel = new javax.swing.JLabel();
        todaysDateLabel = new javax.swing.JLabel();
        todaysDateField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addStockTradeButton = new javax.swing.JButton();
        saveStockTradesButton = new javax.swing.JButton();
        deleteStockTradeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stockTradesInPortfolioLabel.setText("Stock Trades in Portfolio:");

        todaysDateLabel.setText("Todays Date:");

        todaysDateField.setText("jTextField1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Security Ticker", "Date Purchased", "Quantity", "Purchase Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        addStockTradeButton.setText("Add Stock Trade");

        saveStockTradesButton.setText("Save");

        deleteStockTradeButton.setText("Delete Selected");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(stockTradesInPortfolioLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(todaysDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(todaysDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(addStockTradeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(saveStockTradesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(deleteStockTradeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stockTradesInPortfolioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(todaysDateLabel)
                    .addComponent(todaysDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStockTradeButton)
                    .addComponent(saveStockTradesButton)
                    .addComponent(deleteStockTradeButton))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStockTradesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStockTradesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStockTradesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStockTradesWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageStockTradesWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStockTradeButton;
    private javax.swing.JButton deleteStockTradeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton saveStockTradesButton;
    private javax.swing.JLabel stockTradesInPortfolioLabel;
    private javax.swing.JTextField todaysDateField;
    private javax.swing.JLabel todaysDateLabel;
    // End of variables declaration//GEN-END:variables
}
